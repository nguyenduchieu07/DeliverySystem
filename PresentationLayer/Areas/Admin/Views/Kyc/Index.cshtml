@using PresentationLayer.Models
@using DataAccessLayer.Enums
@model KycSubmissionIndexViewModel;
@{
    ViewBag.Title = "KYC chờ duyệt";
}

<style>
    :root {
        --brand: #e5501b;
        --brand-dark: #d26c45;
        --text: #5a5c69;
        --text-light: #858796;
        --border: #e3e6f0;
        --success: #1cc88a;
        --warning: #f6c23e;
        --danger: #e74a3b;
        --light: #f8f9fc;
    }

    /* Page Header */
    .page-heading {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1.5rem;
    }

    .page-heading h1 {
        font-size: 1.75rem;
        font-weight: 400;
        color: var(--text);
        margin: 0;
    }

    /* Alerts */
    .alert {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 0.75rem;
        padding: 0.875rem 1.125rem;
        border-radius: 0.35rem;
        margin-bottom: 1.25rem;
        border: 1px solid transparent;
        font-size: 0.875rem;
        animation: slideDown 0.3s ease;
    }

    @@keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .alert.success {
        background: #d4edda;
        border-color: #c3e6cb;
        color: #155724;
    }

    .alert.error {
        background: #f8d7da;
        border-color: #f5c6cb;
        color: #721c24;
    }

    .alert .close {
        border: none;
        background: transparent;
        color: inherit;
        font-size: 1.25rem;
        cursor: pointer;
        padding: 0 0.375rem;
        opacity: 0.7;
        line-height: 1;
    }

    .alert .close:hover {
        opacity: 1;
    }

    /* Card */
    .card {
        background: #fff;
        border: 1px solid var(--border);
        border-radius: 0.35rem;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(180deg, var(--brand) 0%, var(--brand-dark) 100%);
        padding: 1rem 1.25rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.15);
    }

    .card-header h3 {
        color: #fff;
        margin: 0;
        font-size: 1rem;
        font-weight: 700;
    }

    .card-body {
        padding: 1.25rem;
    }

    /* Table */
    .kyc-table {
        width: 100% !important;
        border-collapse: collapse;
    }

    .kyc-table thead {
        background: var(--light);
        border-bottom: 1px solid var(--border);
    }

    .kyc-table th {
        padding: 1rem 1.25rem;
        text-align: left;
        font-weight: 700;
        font-size: 0.7rem;
        color: var(--text);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .kyc-table tbody tr {
        border-bottom: 1px solid var(--border);
        transition: background 0.15s ease;
    }

    .kyc-table tbody tr:hover {
        background: var(--light);
    }

    .kyc-table td {
        padding: 1.25rem;
        color: var(--text);
        font-size: 0.875rem;
        vertical-align: top;
    }

    /* Store Info */
    .store-name {
        font-weight: 600;
        color: #3a3b45;
        display: block;
        margin-bottom: 0.25rem;
    }

    .store-id {
        font-size: 0.75rem;
        color: var(--text-light);
    }

    /* Date */
    .date-time {
        color: var(--text-light);
        font-size: 0.8125rem;
    }

    /* Documents */
    .doc-list {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .doc-item {
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        padding: 0.375rem 0.625rem;
        background: rgba(229, 80, 27, 0.1);
        border-radius: 0.35rem;
        color: var(--brand);
        text-decoration: none;
        font-size: 0.8125rem;
        transition: all 0.2s;
        width: fit-content;
    }

    .doc-item:hover {
        background: rgba(229, 80, 27, 0.2);
        transform: translateX(2px);
        color: var(--brand-dark);
    }

    /* Chips */
    .chip {
        display: inline-block;
        padding: 0.375rem 0.875rem;
        border-radius: 10rem;
        font-size: 0.7rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.3px;
    }

    .chip.ok {
        background: #d4edda;
        color: var(--success);
    }

    .chip.danger {
        background: #f8d7da;
        color: var(--danger);
    }

    .chip.pending {
        background: #fff3cd;
        color: var(--warning);
    }

    /* Forms */
    .form-group {
        display: flex;
        flex-direction: column;
        gap: 0.625rem;
    }

    .form-row {
        display: flex;
        gap: 0.5rem;
        align-items: flex-start;
    }

    .input {
        padding: 0.5rem 0.75rem;
        border: 1px solid var(--border);
        border-radius: 0.35rem;
        font-size: 0.8125rem;
        transition: all 0.15s;
        background: #fff;
    }

    .input:focus {
        outline: none;
        border-color: var(--brand);
        box-shadow: 0 0 0 0.2rem rgba(229, 80, 27, 0.25);
    }

    .input:disabled {
        background: #e9ecef;
        color: #6c757d;
        cursor: not-allowed;
        opacity: 0.6;
    }

    .input.sm {
        padding: 0.4375rem 0.625rem;
        font-size: 0.75rem;
    }

    .btn {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 0.35rem;
        font-size: 0.8125rem;
        font-weight: 400;
        cursor: pointer;
        transition: all 0.15s;
        white-space: nowrap;
    }

    .btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    .btn.success {
        background: var(--success);
        color: #fff;
    }

    .btn.success:hover:not(:disabled) {
        background: #17a673;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(28, 200, 138, 0.5);
    }

    .btn.warn {
        background: var(--warning);
        color: #212529;
    }

    .btn.warn:hover:not(:disabled) {
        background: #dda20a;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(246, 194, 62, 0.5);
    }

    .btn.danger {
        background: var(--danger);
        color: #fff;
    }

    .btn.danger:hover:not(:disabled) {
        background: #c02c2c;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(231, 74, 59, 0.5);
    }

    /* DataTables Styling */
    .dataTables_wrapper .dataTables_length select {
        padding: 0.375rem 0.75rem;
        border: 1px solid var(--border);
        border-radius: 0.35rem;
        font-size: 0.875rem;
    }

    .dataTables_wrapper .dataTables_filter input {
        padding: 0.375rem 0.75rem;
        border: 1px solid var(--border);
        border-radius: 0.35rem;
        font-size: 0.875rem;
        margin-left: 0.5rem;
    }

    .dataTables_wrapper .dataTables_filter input:focus {
        outline: none;
        border-color: var(--brand);
        box-shadow: 0 0 0 0.2rem rgba(229, 80, 27, 0.25);
    }

    .dataTables_wrapper .dataTables_info {
        font-size: 0.875rem;
        color: var(--text-light);
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button {
        padding: 0.375rem 0.75rem;
        margin: 0 0.125rem;
        border: 1px solid var(--border);
        border-radius: 0.35rem;
        background: #fff;
        color: var(--text);
        font-size: 0.875rem;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
        background: var(--light);
        border-color: var(--brand);
        color: var(--brand);
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button.current {
        background: var(--brand) !important;
        border-color: var(--brand) !important;
        color: #fff !important;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover {
        background: var(--brand-dark) !important;
        border-color: var(--brand-dark) !important;
    }
    
    .mini-doc-table-vertical {
        border-collapse: collapse;
        background: transparent;
        font-size: 0.85rem;
        width: auto;
    }

    .mini-doc-table-vertical th,
    .mini-doc-table-vertical td {
        border: none !important;
        padding: 0.25rem 0.5rem;
        vertical-align: middle;
    }

    .mini-doc-table-vertical th {
        font-weight: 600;
        color: #555;
        text-align: left;
        text-transform: uppercase;
        font-size: 0.75rem;
        letter-spacing: 0.4px;
        width: 70px;
    }

    .mini-doc-table-vertical td {
        text-align: center;
    }

    .has-doc {
        color: #1cc88a; /* tick xanh */
        font-size: 1rem;
    }

    .no-doc {
        display: inline-block;
        width: 1rem;
        height: 1rem;
    }

    /* === STATS CARDS === */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.25rem;
        margin-bottom: 1.5rem;
    }

    .stat-card {
        background: #ffffff;
        border-left: 4px solid #e5501b;
        padding: 1rem;
        border-radius: 0.35rem;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        transition: all 0.15s ease-in-out;
    }

    .stat-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 0.5rem 2rem 0 rgba(58, 59, 69, 0.2);
    }

    .stat-label {
        font-size: 0.7rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        color: #e5501b;
        margin-bottom: 0.25rem;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #5a5c69;
    }

    @@media (max-width: 768px) {
        .stats-grid {
            grid-template-columns: 1fr;
        }

        #storeDataTable thead th,
        #storeDataTable tbody td {
            padding: 0.75rem;
            font-size: 0.75rem;
        }
    }
    
</style>

<!-- Page Heading -->
<div class="page-heading">
    <h1>📋 KYC</h1>
</div>

<div class="stats-grid">
    <div class="stat-card">
        <div class="stat-label">Tổng Cửa Hàng</div>
        <div class="stat-value">@Model.KycSubmissions.Count()</div>
    </div>
    <div class="stat-card" style="border-left-color: var(--success);">
        <div class="stat-label" style="color: var(--success);">Đã Xác Minh</div>
        <div class="stat-value">@Model.KycSubmissions.Count(s => s.Status == KycStatus.Approved)</div>
    </div>
    <div class="stat-card" style="border-left-color: var(--danger);">
        <div class="stat-label" style="color: var(--danger);">Chưa Xác Minh</div>
        <div class="stat-value">@Model.KycSubmissions.Count(s => s.Status == KycStatus.Rejected)</div>
    </div>
</div>


<div class="kyc-container">
    @if (TempData["Success"] is string ok && !string.IsNullOrWhiteSpace(ok))
    {
        <div class="alert success">
            <span class="msg">
                <i class="fas fa-check-circle"></i> @ok
            </span>
            <button type="button" class="close" aria-label="Đóng" onclick="this.parentElement.remove()">×</button>
        </div>
    }
    @if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
    {
        <div class="alert error">
            <span class="msg">
                <i class="fas fa-exclamation-circle"></i> @err
            </span>
            <button type="button" class="close" aria-label="Đóng" onclick="this.parentElement.remove()">×</button>
        </div>
    }

    <div class="card">
        <div class="card-header">
            <h3>📝 KYC chờ duyệt</h3>
        </div>
        <div class="card-body">
            <table id="kycDatatable" class="kyc-table">
                <thead>
                <tr>
                    <th>Cửa hàng</th>
                    <th>Ngày nộp</th>
                    <th>Giấy tờ</th>
                    <th>Trạng thái</th>
                    <th>Hành động</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var s in Model.KycSubmissions)
                {
                    <tr>
                        <td>
                            <span class="store-name">@s.Store.StoreName</span>
                            <span class="store-id">ID: @s.Store.Id.ToString().Substring(0, 8)</span>
                        </td>
                        <td>
                            <span class="date-time">
                                @s.SubmittedAt.ToLocalTime().ToString("dd/MM/yyyy")<br>
                                @s.SubmittedAt.ToLocalTime().ToString("HH:mm")
                            </span>
                        </td>
                        <td>
                            <div class="doc-list">
                                @{
                                    var docTypes = new[] { "License", "ID", "Tax" };
                                }

                                <table class="mini-doc-table-vertical">
                                    <tbody>
                                    @foreach (var type in docTypes)
                                    {
                                        var doc = s.Documents.FirstOrDefault(d => d.DocType == type);
                                        <tr>
                                            <th>@type</th>
                                            <td>
                                                @if (doc != null)
                                                {
                                                    <a href="@doc.FilePath" target="_blank" title="Xem tài liệu">
                                                        <i class="fas fa-check-circle has-doc"></i>
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="no-doc"></span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        </td>
                        <td>
                            <span
                                class="chip @(s.Status == KycStatus.Approved ? "ok" : s.Status == KycStatus.Rejected ? "danger" : "pending")">
                                @s.Status.ToDisplayString()
                            </span>
                        </td>
                        <td>
                            <div class="form-group">
                                @* <form asp-area="Admin" asp-controller="Kyc" asp-action="NeedChanges" method="post"> *@
                                @*     <input type="hidden" name="submissionId" value="@s.Id"/> *@
                                @*     <div class="form-row"> *@
                                @*         <input class="input sm" name="note" placeholder="Thiếu giấy tờ..." style="flex: 1;" *@
                                @*                @(s.Status == KycStatus.NeedChanges ? "disabled" : "")/> *@
                                @*         <button class="btn warn" @(s.Status == KycStatus.NeedChanges ? "disabled" : "")> *@
                                @*             <i class="fas fa-exclamation-triangle"></i> Yêu cầu *@
                                @*         </button> *@
                                @*     </div> *@
                                @* </form> *@

                                <form asp-area="Admin" asp-controller="Kyc" asp-action="Approve" method="post">
                                    <input type="hidden" name="submissionId" value="@s.Id"/>
                                    <div class="form-group">
                                        <div class="form-row">
                                            <input class="input sm" name="maxPerDay" type="number" placeholder="Max/day"
                                                   style="width:90px" @(s.Status == KycStatus.Approved ? "disabled" : "")/>
                                            <input class="input sm" name="regionsCsv" placeholder="HN,HCM,DN" style="flex: 1;"
                                                   @(s.Status == KycStatus.Approved ? "disabled" : "")/>
                                        </div>
                                        <button class="btn success" type="submit"
                                                @(s.Status == KycStatus.Approved ? "disabled" : "")>
                                            <i class="fas fa-check"></i> Chấp thuận
                                        </button>
                                    </div>
                                </form>
                                
                                <form asp-area="Admin" asp-controller="Kyc" asp-action="Reject" method="post">
                                    <input type="hidden" name="submissionId" value="@s.Id"/>
                                    <div class="form-row">
                                        <input class="input sm" name="note" placeholder="Lý do từ chối..." style="flex: 1;"
                                               @(s.Status == KycStatus.Rejected ? "disabled" : "")/>
                                        <button class="btn danger" @(s.Status == KycStatus.Rejected ? "disabled" : "")>
                                            <i class="fas fa-times"></i> Từ chối
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    setTimeout(() => {
        document.querySelectorAll('.alert').forEach(a => {
            a.style.transition = 'opacity 0.3s ease';
            a.style.opacity = '0';
            setTimeout(() => a.remove(), 300);
        });
    }, 4000);
</script>

    <script>
    $(document).ready(function () {
        $('#kycDatatable').DataTable({
            pageLength: 10,
            order: [[0, 'asc']],
            language: {
                lengthMenu: "Hiển thị _MENU_ mục",
                info: "Hiển thị _START_ đến _END_ trong tổng _TOTAL_ mục",
                infoEmpty: "Hiển thị 0 đến 0 trong tổng 0 mục",
                infoFiltered: "(lọc từ _MAX_ mục)",
                emptyTable: "Không có dữ liệu",
                search: "🔍",
                paginate: {
                    first: '<i class="fas fa-angle-double-left"></i>',
                    previous: '<i class="fas fa-angle-left"></i>',
                    next: '<i class="fas fa-angle-right"></i>',
                    last: '<i class="fas fa-angle-double-right"></i>'
                },
                zeroRecords: "Không tìm thấy kết quả phù hợp"
            },
            responsive: true,
            columnDefs: [
                {orderable: false, targets: [1, 3, 4]}
            ]
        });
    });
</script>
}