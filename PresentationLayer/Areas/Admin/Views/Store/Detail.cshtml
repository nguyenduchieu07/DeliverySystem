@using DataAccessLayer.Enums
@model PresentationLayer.Models.AdminStoreDetailViewModel
@{
    ViewBag.Title = "Chi tiết cửa hàng";
}

<style>
    :root {
        --primary: #e5501b;
        --success: #1cc88a;
        --warning: #f6c23e;
        --danger: #e74a3b;
        --text: #5a5c69;
        --border: #e3e6f0;
        --white: #ffffff;
        --gray: #858796;
        --shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
    }

    /* Page Header */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .page-header h1 {
        font-size: 1.75rem;
        font-weight: 400;
        color: var(--text);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .page-header h1 i {
        color: var(--primary);
    }

    /* Back Button */
    .btn-back {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background: var(--white);
        border: 1px solid var(--border);
        border-radius: 0.35rem;
        color: var(--text);
        text-decoration: none;
        font-size: 0.875rem;
        transition: all 0.15s ease-in-out;
    }

    .btn-back:hover {
        background: var(#f8f9fc);
        border-color: var(--primary);
        color: var(--primary);
        transform: translateY(-1px);
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .btn-back::before {
        content: '\f060';
        font-family: 'Font Awesome 5 Free';
        font-weight: 900;
    }

    /* Card Styles */
    .card {
        background: var(--white);
        border: 1px solid var(--border);
        border-radius: 0.35rem;
        box-shadow: var(--shadow);
        margin-bottom: 1.25rem;
        transition: all 0.15s ease-in-out;
    }

    .card:hover {
        box-shadow: 0 0.5rem 2rem 0 rgba(58, 59, 69, 0.2);
    }

    .card-header {
        background: linear-gradient(180deg, var(--primary) 0%, var(#d26c45) 100%);
        padding: 0.75rem 1.25rem;
        border-bottom: none;
        border-radius: 0.35rem 0.35rem 0 0;
        font-size: 1rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--white);
    }

    .card-body {
        padding: 1.25rem;
    }

    /* Detail Grid */
    .detail-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .detail-item {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .detail-label {
        font-size: 0.7rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        color: var(--gray);
    }

    .detail-value {
        font-size: 0.875rem;
        color: var(--text);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    /* Badges */
    .badge {
        display: inline-block;
        padding: 0.375rem 0.875rem;
        border-radius: 10rem;
        font-size: 0.7rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        white-space: nowrap;
    }

    .badge-active {
        background: var(--success);
        color: var(--white);
    }

    .badge-inactive {
        background: var(--gray);
        color: var(--white);
    }

    .badge-pending {
        background: var(--warning);
        color: var(--white);
    }

    .badge-kyc {
        background: var(--primary);
        color: var(--white);
    }

    /* Verification Icon */
    .verified-icon {
        font-size: 1.5rem;
    }

    .verified-yes {
        color: var(--success);
    }

    .verified-no {
        color: var(--danger);
    }

    /* Rating Stars */
    .rating-stars {
        color: var(--warning);
        font-size: 1rem;
    }

    .rating-stars i {
        margin-right: 0.125rem;
    }

    /* Links */
    .detail-value a {
        color: var(--primary);
        text-decoration: none;
        transition: all 0.15s ease-in-out;
        font-weight: 600;
    }

    .detail-value a:hover {
        color: var(#d26c45);
        text-decoration: underline;
    }

    .text-muted {
        color: var(--gray);
        font-style: italic;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--border);
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 0.35rem;
        font-size: 0.875rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.15s ease-in-out;
        text-decoration: none;
    }

    .btn-primary {
        background: var(--primary);
        color: var(--white);
    }

    .btn-primary:hover {
        background: var(#d26c45);
        transform: translateY(-1px);
    }

    .btn-success {
        background: var(--success);
        color: var(--white);
    }

    .btn-success:hover {
        background: #17a673;
        transform: translateY(-1px);
    }

    .btn-danger {
        background: var(--danger);
        color: var(--white);
    }

    .btn-danger:hover {
        background: #c23321;
        transform: translateY(-1px);
    }

    .btn-outline {
        background: var(--white);
        border: 1px solid var(--border);
        color: var(--text);
    }

    .btn-outline:hover {
        background: var(#f8f9fc);
        border-color: var(--primary);
        color: var(--primary);
    }

    /* Info Box */
    .info-box {
        background: var(#f8f9fc);
        border-left: 4px solid var(--primary);
        padding: 1rem;
        border-radius: 0.35rem;
        margin-top: 1rem;
    }

    .info-box-title {
        font-weight: 700;
        color: var(--text);
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .info-box-content {
        color: var(--gray);
        font-size: 0.875rem;
        line-height: 1.6;
    }

    /* Responsive */
    @@media (max-width: 768px) {
    .page-header {
        flex-direction: column;
        align-items: flex-start;
    }

    .detail-grid {
        grid-template-columns: 1fr;
    }

    .action-buttons {
        flex-direction: column;
    }

    .btn {
        width: 100%;
        justify-content: center;
    }
    }

    /* Map Link Styling */
    .map-link {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0.375rem 0.75rem;
        background: var(#f8f9fc);
        border: 1px solid var(--border);
        border-radius: 0.35rem;
        color: var(--primary);
        text-decoration: none;
        font-weight: 600;
        transition: all 0.15s ease-in-out;
    }

    .map-link:hover {
        background: var(--primary);
        border-color: var(--primary);
        color: var(--white);
        transform: translateY(-1px);
    }

    /* Stats Overview */
    .stats-mini {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .stat-mini-card {
        background: var(--white);
        border: 1px solid var(--border);
        border-radius: 0.35rem;
        padding: 1rem;
        text-align: center;
        transition: all 0.15s ease-in-out;
    }

    .stat-mini-card:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow);
    }

    .stat-mini-icon {
        font-size: 1.5rem;
        color: var(--primary);
        margin-bottom: 0.5rem;
    }

    .stat-mini-label {
        font-size: 0.7rem;
        text-transform: uppercase;
        color: var(--gray);
        letter-spacing: 0.5px;
        font-weight: 700;
    }

    .stat-mini-value {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--text);
        margin-top: 0.25rem;
    }

</style>

<div class="page-header">
    <h1>Chi Tiết Cửa Hàng</h1>
    <div>
        <a asp-area="Admin" asp-controller="Store" asp-action="Detail" asp-route-id="@Model.Store.Id" class="btn btn-primary">
            <i class="fas fa-edit"></i> Chỉnh sửa thông tin
        </a>
        <a asp-area="Admin" asp-controller="Store" asp-action="Index" class="btn-back">
            Quay lại danh sách
        </a>
    </div>
</div>

<!-- Quick Stats -->
<div class="stats-mini">
    <div class="stat-mini-card">
        <div class="stat-mini-icon">
            @if (Model.Store.IsVerified)
            {
                <i class="fas fa-check-circle" style="color: var(--success);"></i>
            }
            else
            {
                <i class="fas fa-times-circle" style="color: var(--danger);"></i>
            }
        </div>
        <div class="stat-mini-label">Trạng thái xác minh</div>
        <div class="stat-mini-value">@(Model.Store.IsVerified ? "Đã xác minh" : "Chưa xác minh")</div>
    </div>
    <div class="stat-mini-card">
        <div class="stat-mini-icon"><i class="fas fa-star"></i></div>
        <div class="stat-mini-label">Điểm đánh giá</div>
        <div class="stat-mini-value">@($"{Model.Store.RatingAvg:F1}") / 5</div>
    </div>
    <div class="stat-mini-card">
        <div class="stat-mini-icon"><i class="fas fa-comments"></i></div>
        <div class="stat-mini-label">Số đánh giá</div>
        <div class="stat-mini-value">@Model.ReviewCount</div>
    </div>
    <div class="stat-mini-card">
        <div class="stat-mini-icon"><i class="fas fa-shield-alt"></i></div>
        <div class="stat-mini-label">KYC Level</div>
        <div class="stat-mini-value">@(Model.Store.KycLevel ?? "N/A")</div>
    </div>
</div>

<!-- Tổng quan -->
<div class="card">
    <div class="card-header"><i class="fas fa-info-circle"></i> Thông Tin Tổng Quan</div>
    <div class="card-body">
        <div class="detail-grid">
            <div class="detail-item">
                <div class="detail-label">Tên cửa hàng</div>
                <div class="detail-value">@Model.Store.StoreName</div>
            </div>
            <div class="detail-item">
                <div class="detail-label">Trạng thái</div>
                <div class="detail-value">
                    @if (Model.Store.Status == StatusValue.Active)
                    { 
                        <span class="badge badge-active">Hoạt động</span> 
                    }
                    else if (Model.Store.Status == StatusValue.Pending)
                    { 
                        <span class="badge badge-pending">Chờ duyệt</span> 
                    }
                    else
                    { 
                        <span class="badge badge-inactive">Ngừng hoạt động</span> 
                    }
                </div>
            </div>
            <div class="detail-item">
                <div class="detail-label">KYC Level</div>
                <div class="detail-value"><span class="badge badge-kyc">Level @Model.Store.KycLevel</span></div>
            </div>
            <div class="detail-item">
                <div class="detail-label">Đã xác minh</div>
                <div class="detail-value">
                    @if (Model.Store.IsVerified)
                    { 
                        <i class="fas fa-check-circle verified-icon verified-yes"></i>
                        <span style="color: var(--success); font-weight: 600;">Đã xác minh</span>
                    }
                    else
                    { 
                        <i class="fas fa-times-circle verified-icon verified-no"></i>
                        <span style="color: var(--danger); font-weight: 600;">Chưa xác minh</span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Thông tin pháp lý & liên hệ -->
<div class="card">
    <div class="card-header"><i class="fas fa-id-card"></i> Thông Tin Pháp Lý & Liên Hệ</div>
    <div class="card-body">
        <div class="detail-grid">
            <div class="detail-item">
                <div class="detail-label">Tên pháp lý</div>
                <div class="detail-value">@(Model.Store.LegalName ?? "N/A")</div>
            </div>
            <div class="detail-item">
                <div class="detail-label">Mã số thuế</div>
                <div class="detail-value">@(Model.Store.TaxNumber ?? "N/A")</div>
            </div>
            <div class="detail-item">
                <div class="detail-label">Số điện thoại</div>
                <div class="detail-value">
                    @if (!string.IsNullOrEmpty(Model.Store.ContactPhone))
                    {
                        <i class="fas fa-phone" style="color: var(#e5501b);"></i>
                        <a href="tel:@Model.Store.ContactPhone">@Model.Store.ContactPhone</a>
                    }
                    else
                    {
                        <span class="text-muted">N/A</span>
                    }
                </div>
            </div>
            <div class="detail-item">
                <div class="detail-label">Email</div>
                <div class="detail-value">
                    @if (!string.IsNullOrEmpty(Model.Store.ContactEmail))
                    {
                        <i class="fas fa-envelope" style="color: var(#e5501b);"></i>
                        <a href="mailto:@Model.Store.ContactEmail">@Model.Store.ContactEmail</a>
                    }
                    else
                    {
                        <span class="text-muted">N/A</span>
                    }
                </div>
            </div>
            <div class="detail-item">
                <div class="detail-label">Ngày hết hạn giấy phép</div>
                <div class="detail-value">
                    @if (Model.Store.LicenseExpiryDate.HasValue)
                    {
                        var daysUntilExpiry = (Model.Store.LicenseExpiryDate.Value - DateTime.Now).Days;
                        if (daysUntilExpiry < 0)
                        {
                            <i class="fas fa-exclamation-triangle" style="color: var(--danger);"></i>
                            <span style="color: var(--danger); font-weight: 700;">
                                @Model.Store.LicenseExpiryDate?.ToString("dd/MM/yyyy") (Đã hết hạn)
                            </span>
                        }
                        else if (daysUntilExpiry < 30)
                        {
                            <i class="fas fa-exclamation-circle" style="color: var(--danger);"></i>
                            <span style="color: var(--danger); font-weight: 600;">
                                @Model.Store.LicenseExpiryDate?.ToString("dd/MM/yyyy") (Còn @daysUntilExpiry ngày)
                            </span>
                        }
                        else if (daysUntilExpiry < 90)
                        {
                            <i class="fas fa-clock" style="color: var(--warning);"></i>
                            <span style="color: var(--warning); font-weight: 600;">
                                @Model.Store.LicenseExpiryDate?.ToString("dd/MM/yyyy") (Còn @daysUntilExpiry ngày)
                            </span>
                        }
                        else
                        {
                            <i class="fas fa-calendar-check" style="color: var(--success);"></i>
                            @Model.Store.LicenseExpiryDate?.ToString("dd/MM/yyyy")
                        }
                    }
                    else
                    {
                        <span class="text-muted">N/A</span>
                    }
                </div>
            </div>
        </div>

        @if (Model.Store.LicenseExpiryDate.HasValue)
        {
            var daysUntilExpiry = (Model.Store.LicenseExpiryDate.Value - DateTime.Now).Days;
            if (daysUntilExpiry < 30)
            {
                <div class="info-box" style="border-left-color: var(--danger); background: #ffe5e5;">
                    <div class="info-box-title" style="color: var(--danger);">
                        <i class="fas fa-exclamation-triangle"></i>
                        Cảnh báo giấy phép
                    </div>
                    <div class="info-box-content" style="color: var(--danger);">
                        Giấy phép kinh doanh sắp hết hạn. Vui lòng liên hệ với cửa hàng để gia hạn.
                    </div>
                </div>
            }
        }
    </div>
</div>

<!-- Đánh giá & vị trí -->
<div class="card">
    <div class="card-header"><i class="fas fa-star"></i> Đánh Giá & Vị Trí</div>
    <div class="card-body">
        <div class="detail-grid">
            <div class="detail-item">
                <div class="detail-label">Điểm đánh giá</div>
                <div class="detail-value">
                    <div class="rating-stars">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Math.Floor(Model.Store.RatingAvg))
                            { 
                                <i class="fas fa-star"></i> 
                            }
                            else if (i - 0.5 <= (double)Model.Store.RatingAvg)
                            { 
                                <i class="fas fa-star-half-alt"></i> 
                            }
                            else
                            { 
                                <i class="far fa-star"></i> 
                            }
                        }
                    </div>
                    <span>@($"{Model.Store.RatingAvg:F1}") / 5 (@Model.ReviewCount lượt)</span>
                    <a asp-area="Admin" asp-controller="Store" asp-action="GetFeedbacksByStore" asp-route-storeId="@Model.Store.Id" style="margin-left: 0.5rem;">Xem đánh giá <i class="fas fa-chevron-right"></i></a>
                </div>
            </div>

            <div class="detail-item">
                <div class="detail-label">Vị trí cửa hàng</div>
                <div class="detail-value">
                    @if (Model.Store.Latitude.HasValue && Model.Store.Longitude.HasValue)
                    {
                        <a href="https://www.google.com/maps?q=@Model.Store.Latitude,@Model.Store.Longitude" target="_blank" class="map-link">
                            <i class="fas fa-map-marker-alt"></i>
                            Xem trên Google Maps
                        </a>
                    }
                    else
                    {
                        <span class="text-muted">Không có dữ liệu vị trí</span>
                    }
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        @* <div class="action-buttons"> *@
        @*      *@
        @*     <button type="button" class="btn btn-outline"> *@
        @*         <i class="fas fa-history"></i> Xem lịch sử hoạt động *@
        @*     </button> *@
        @*     <button type="button" class="btn btn-outline"> *@
        @*         <i class="fas fa-file-alt"></i> Xuất báo cáo *@
        @*     </button> *@
        @* </div> *@
    </div>
</div>

<div class="card mt-4">
    <div class="card-header"><i class="fas fa-id-card"></i> Hồ sơ KYC</div>
    <div class="card-body">
        @if (Model.KycSubmission == null)
        {
            <p class="text-muted">Chưa có hồ sơ KYC nào được gửi.</p>
        }
        else
        {
            <div class="detail-grid">
                <div class="detail-item">
                    <div class="detail-label">Trạng thái</div>
                    <div class="detail-value">
                        @{
                            var statusColor = Model.KycSubmission.Status switch
                            {
                                DataAccessLayer.Enums.KycStatus.Pending => "text-warning",
                                DataAccessLayer.Enums.KycStatus.NeedChanges => "text-info",
                                DataAccessLayer.Enums.KycStatus.Approved => "text-success",
                                DataAccessLayer.Enums.KycStatus.Rejected => "text-danger",
                                _ => "text-muted"
                            };
                        }
                        <span class="@statusColor fw-bold">@Model.KycSubmission.Status.ToDisplayString()</span>
                    </div>
                </div>

                <div class="detail-item">
                    <div class="detail-label">Ngày gửi</div>
                    <div class="detail-value">@Model.KycSubmission.SubmittedAt.ToString("dd/MM/yyyy HH:mm")</div>
                </div>

                @if (Model.KycSubmission.ReviewedAt.HasValue)
                {
                    <div class="detail-item">
                        <div class="detail-label">Ngày duyệt</div>
                        <div class="detail-value">@Model.KycSubmission.ReviewedAt?.ToString("dd/MM/yyyy HH:mm")</div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.KycSubmission.AdminNote))
                {
                    <div class="detail-item">
                        <div class="detail-label">Ghi chú của quản trị viên</div>
                        <div class="detail-value text-muted">@Model.KycSubmission.AdminNote</div>
                    </div>
                }
            </div>

            <hr />

            <h6><i class="fas fa-file-alt"></i> Tài liệu KYC đã tải lên</h6>
            @if (!Model.KycSubmission.Documents.Any())
            {
                <p class="text-muted mt-2">Không có tài liệu nào được đính kèm.</p>
            }
            else
            {
                <table class="table table-sm table-striped mt-2">
                    <thead>
                        <tr>
                            <th>Loại tài liệu</th>
                            <th>Liên kết</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var doc in Model.KycSubmission.Documents)
                        {
                            <tr>
                                <td>@doc.DocType</td>
                                <td>
                                    <a href="@Url.Content(doc.FilePath)" target="_blank">
                                        <i class="fas fa-link"></i> Xem tài liệu
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            @if (Model.Store.IsVerified)
            {
                <button type="button" class="btn btn-danger">
                    <i class="fas fa-ban"></i> Hủy xác minh
                </button>
            }
            else
            {
                <button type="button" class="btn btn-success">
                    <i class="fas fa-check"></i> Xác minh cửa hàng
                </button>
            }
        }
    </div>
</div>

