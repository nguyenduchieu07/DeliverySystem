@model IEnumerable<DataAccessLayer.Entities.Store>

@{
    ViewBag.Title = "Danh sách cửa hàng";
}

<style>
    :root {
        --primary: #e5501b;
        --primary-dark: #d26c45;
        --success: #1cc88a;
        --info: #36b9cc;
        --warning: #f6c23e;
        --danger: #e74a3b;
        --secondary: #858796;
        --light: #f8f9fc;
        --dark: #5a5c69;
    }

    .page-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1.5rem;
    }

    .page-title {
        font-size: 1.75rem;
        font-weight: 400;
        color: var(--dark);
        margin: 0;
    }

    .btn-primary {
        background-color: var(--primary);
        border-color: var(--primary);
        color: #fff;
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
        border-radius: 0.35rem;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(58, 59, 69, 0.2);
        transition: all 0.15s ease-in-out;
    }

    .btn-primary:hover {
        background-color: var(--primary-dark);
        border-color: var(--primary-dark);
        color: #fff;
        box-shadow: 0 0.25rem 0.5rem 0 rgba(229, 80, 27, 0.3);
    }

    .store-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .store-card {
        background: #fff;
        border: 1px solid #e3e6f0;
        border-radius: 0.35rem;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        transition: all 0.3s ease;
    }

    .store-card:hover {
        box-shadow: 0 0.5rem 2rem 0 rgba(58, 59, 69, 0.25);
        transform: translateY(-2px);
        border-color: var(--primary);
    }

    .card-header-custom {
        background: linear-gradient(180deg, #fff 10%, var(--light) 100%);
        padding: 1rem 1.25rem;
        border-bottom: 1px solid #e3e6f0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-radius: 35rem;
    }

    .store-name {
        font-size: 1rem;
        font-weight: 700;
        color: var(--primary);
        margin: 0;
    }

    .verified-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0.25rem 0.75rem;
        border-radius: 10rem;
        font-size: 0.75rem;
        font-weight: 700;
        text-transform: uppercase;
    }

    .verified-badge.verified {
        background-color: #d4edda;
        color: var(--success);
    }

    .verified-badge.pending {
        background-color: #fff3cd;
        color: var(--warning);
    }

    .card-body-custom {
        padding: 1.25rem;
    }

    .info-group {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        margin-bottom: 1rem;
    }

    .info-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-size: 0.875rem;
        color: var(--dark);
    }

    .info-icon {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--light);
        border-radius: 0.35rem;
        color: var(--secondary);
        font-size: 1rem;
    }

    .rating-section {
        padding: 1rem;
        background: var(--light);
        border-radius: 0.35rem;
        border-left: 0.25rem solid var(--primary);
        margin-bottom: 1rem;
    }

    .rating-header {
        font-size: 0.7rem;
        font-weight: 700;
        text-transform: uppercase;
        color: var(--primary);
        margin-bottom: 0.5rem;
        letter-spacing: 0.5px;
    }

    .rating-content {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .rating-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--dark);
    }

    .rating-stars {
        display: flex;
        gap: 0.125rem;
        font-size: 1rem;
        color: var(--warning);
    }

    .rating-count {
        font-size: 0.75rem;
        color: var(--secondary);
        margin-top: 0.25rem;
    }

    .btn-view {
        display: inline-block;
        width: 100%;
        padding: 0.5rem 1rem;
        background-color: var(--primary);
        color: #fff;
        text-decoration: none;
        border-radius: 0.35rem;
        font-size: 0.875rem;
        font-weight: 400;
        text-align: center;
        transition: all 0.15s ease-in-out;
        box-shadow: 0 0.125rem 0.25rem 0 rgba(58, 59, 69, 0.2);
    }

    .btn-view:hover {
        background-color: var(--primary-dark);
        color: #fff;
        box-shadow: 0 0.25rem 0.5rem 0 rgba(229, 80, 27, 0.3);
        text-decoration: none;
    }

    .btn-view i {
        margin-right: 0.25rem;
    }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: #fff;
        border: 1px solid #e3e6f0;
        border-radius: 0.35rem;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
    }

    .empty-icon {
        font-size: 4rem;
        color: #d1d3e2;
        margin-bottom: 1rem;
    }

    .empty-text {
        font-size: 1.25rem;
        color: var(--secondary);
        font-weight: 400;
    }

    .stats-row {
        display: flex;
        justify-content: space-between;
        padding: 0.75rem 0;
        border-top: 1px solid #e3e6f0;
        margin-top: 0.5rem;
    }

    .stat-item {
        text-align: center;
        flex: 1;
    }

    .stat-item:not(:last-child) {
        border-right: 1px solid #e3e6f0;
    }

    .stat-label {
        font-size: 0.7rem;
        color: var(--secondary);
        text-transform: uppercase;
        font-weight: 700;
        letter-spacing: 0.5px;
        margin-bottom: 0.25rem;
    }

    .stat-value {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--primary);
    }

    @@media (max-width: 768px) {
    .store-grid {
        grid-template-columns: 1fr;
    }
    }
</style>

<!-- Page Header -->
<div class="page-header">
    <h1 class="page-title">Danh sách cửa hàng</h1>
</div>

<!-- Store Grid -->
@if (Model != null && Model.Any())
{
    <div class="store-grid">
        @foreach (var store in Model)
        {
            <div class="store-card">
                <!-- Card Header -->
                <div class="card-header-custom">
                    <h6 class="store-name">@store.StoreName</h6>
                    <span class="verified-badge @(store.IsVerified ? "verified" : "pending")">
                        @(store.IsVerified ? "✓ Verified" : "⏳ Pending")
                    </span>
                </div>

                <!-- Card Body -->
                <div class="card-body-custom">
                    <!-- Contact Info -->
                    <div class="info-group">
                        <div class="info-item">
                            <div class="info-icon">
                                <i class="fas fa-phone"></i>
                            </div>
                            <span>@store.ContactPhone</span>
                        </div>
                        <div class="info-item">
                            <div class="info-icon">
                                <i class="fas fa-envelope"></i>
                            </div>
                            <span>@store.ContactEmail</span>
                        </div>
                    </div>

                    <!-- Rating Section -->
                    <div class="rating-section">
                        <div class="rating-header">Đánh giá trung bình</div>
                        <div class="rating-content">
                            <div class="rating-value">@store.RatingAvg.ToString("0.0")</div>
                            <div>
                                <div class="rating-stars">
                                    @{
                                        var rating = (int)Math.Round(store.RatingAvg);
                                        for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="@(i <= rating ? "fas" : "far") fa-star"></i>
                                        }
                                    }
                                </div>
                                <div class="rating-count">@store.RatingCount lượt đánh giá</div>
                            </div>
                        </div>
                    </div>

                    <!-- View Button -->
                    <a asp-area="Admin"
                       asp-controller="Feedback"
                       asp-action="GetFeedbacksByStore"
                       asp-route-storeId="@store.Id"
                       class="btn-view">
                        <i class="fas fa-eye"></i> Xem đánh giá
                    </a>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="empty-state">
        <div class="empty-icon">
            <i class="fas fa-store-slash"></i>
        </div>
        <div class="empty-text">Chưa có cửa hàng nào trong hệ thống</div>
    </div>
}