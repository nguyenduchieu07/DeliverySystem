@{
    ViewData["Title"] = "Đặt giao hàng";
}

<style>
    .delivery-page {
        display: flex;
        height: calc(100vh - 120px); /* Adjust based on header/footer height */
        position: relative;
        overflow: hidden;
    }
    .delivery-page {
        display: flex;
        height: calc(100vh - 120px);
        position: relative;
        overflow: hidden;
    }

    /* Thêm style cho User Profile */
    .user-profile {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 10px 20px;
        background: #fff;
        border-bottom: 1px solid #e0e0e0;
    }

    .user-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: #f26722;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
    }

    .user-info {
        display: flex;
        flex-direction: column;
    }

    .user-name {
        font-size: 14px;
        font-weight: 600;
        color: #333;
    }

    .logout-btn {
        margin-left: auto;
        background: none;
        border: none;
        color: #f26722;
        cursor: pointer;
        font-size: 14px;
        padding: 5px 10px;
        transition: opacity 0.3s ease;
    }

    .logout-btn:hover {
        opacity: 0.8;
    }

    /* Các style khác giữ nguyên */
    .delivery-sidebar { width: 400px; background: white; box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1); display: flex; flex-direction: column; z-index: 10; position: relative; }
    .nav-tabs { display: flex; background: white; border-bottom: 1px solid #e0e0e0; padding: 0 20px; }
    .nav-tab { padding: 15px 20px; cursor: pointer; border-bottom: 3px solid transparent; font-weight: 500; color: #666; text-decoration: none; transition: all 0.3s ease; }
    .nav-tab.active { color: #f26722; border-bottom-color: #f26722; }
    .nav-tab:hover { color: #f26722; text-decoration: none; }
    .delivery-form { flex: 1; padding: 20px; overflow-y: auto; }
    
    /* Left Sidebar */
    .delivery-sidebar {
        width: 400px;
        background: white;
        box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        z-index: 10;
        position: relative;
    }
    
    /* Navigation Tabs */
    .nav-tabs {
        display: flex;
        background: white;
        border-bottom: 1px solid #e0e0e0;
        padding: 0 20px;
    }
    
    .nav-tab {
        padding: 15px 20px;
        cursor: pointer;
        border-bottom: 3px solid transparent;
        font-weight: 500;
        color: #666;
        text-decoration: none;
        transition: all 0.3s ease;
    }
    
    .nav-tab.active {
        color: #f26722;
        border-bottom-color: #f26722;
    }
    
    .nav-tab:hover {
        color: #f26722;
        text-decoration: none;
    }
    
    /* Delivery Form */
    .delivery-form {
        flex: 1;
        padding: 20px;
        overflow-y: auto;
    }
    
    .location-section {
        margin-bottom: 25px;
    }
    
    .section-title {
        font-size: 14px;
        color: #666;
        margin-bottom: 10px;
        text-transform: uppercase;
        font-weight: 600;
        letter-spacing: 0.5px;
    }
    
    .location-input-group {
        position: relative;
        margin-bottom: 15px;
    }
    
    .location-icon {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        width: 12px;
        height: 12px;
        border-radius: 50%;
        z-index: 2;
    }
    
    .pickup-icon {
        background: #f26722;
    }
    
    .dropoff-icon {
        background: #ff6b6b;
    }
    
    .location-input {
        width: 100%;
        padding: 15px 15px 15px 40px;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        font-size: 14px;
        outline: none;
        transition: border-color 0.3s ease;
        background: white;
    }
    
    .location-input:focus {
        border-color: #f26722;
        box-shadow: 0 0 0 2px rgba(242, 103, 34, 0.1);
    }
    
    .location-input.pickup {
        background: #fff8f5;
    }
    
    .location-input.dropoff {
        background: #fff5f5;
    }
    
    .add-stop-btn {
        display: flex;
        align-items: center;
        gap: 8px;
        background: none;
        border: none;
        color: #f26722;
        cursor: pointer;
        font-size: 14px;
        padding: 10px 0;
        transition: opacity 0.3s ease;
    }
    
    .add-stop-btn:hover {
        opacity: 0.8;
    }
    
    .add-stop-btn .icon {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: #f26722;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
    }
    
    /* Vehicle Selection */
    .vehicle-section {
        margin: 25px 0;
    }
    
    .vehicle-options {
        display: flex;
        gap: 10px;
        overflow-x: auto;
        padding: 10px 0;
    }
    
    .vehicle-option {
        min-width: 80px;
        padding: 15px 10px;
        border: 2px solid #e0e0e0;
        border-radius: 12px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        background: white;
    }
    
    .vehicle-option.active {
        border-color: #f26722;
        background: #fff8f5;
    }
    
    .vehicle-option:hover {
        border-color: #f26722;
    }
    
    .vehicle-icon {
        width: 40px;
        height: 30px;
        margin: 0 auto 8px;
        background: #f26722;
        border-radius: 4px;
        position: relative;
    }
    
    .vehicle-icon::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 24px;
        height: 16px;
        background: white;
        border-radius: 2px;
    }
    
    .vehicle-name {
        font-size: 12px;
        font-weight: 600;
        color: #333;
        margin-bottom: 4px;
    }
    
    .vehicle-capacity {
        font-size: 10px;
        color: #666;
    }
    
    /* Additional Options */
    .options-section {
        margin: 25px 0;
    }
    
    .option-item {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 10px 0;
        cursor: pointer;
    }
    
    .option-checkbox {
        width: 18px;
        height: 18px;
        border: 2px solid #e0e0e0;
        border-radius: 4px;
        position: relative;
        transition: all 0.3s ease;
    }
    
    .option-checkbox.checked {
        background: #f26722;
        border-color: #f26722;
    }
    
    .option-checkbox.checked::after {
        content: '✓';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: white;
        font-size: 12px;
    }
    
    .option-label {
        font-size: 14px;
        color: #333;
        flex: 1;
    }
    
    .option-info {
        color: #f26722;
        font-size: 12px;
        cursor: pointer;
    }
    
    /* Book Now Button */
    .book-section {
        padding: 20px;
        border-top: 1px solid #e0e0e0;
        background: white;
    }
    
    .book-btn {
        width: 100%;
        background: #f26722;
        color: white;
        border: none;
        padding: 15px;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }
    
    .book-btn:hover {
        background: #e55a1b;
    }
    
    .book-btn:disabled {
        background: #ccc;
        cursor: not-allowed;
    }
    
    /* Map Container */
    .map-container {
        flex: 1;
        position: relative;
        background: #f0f8f0;
    }
    
    .map-placeholder {
        width: 100%;
        height: 100%;
        position: relative;
        background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c8 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        color: #666;
    }
    
    /* Location Controls */
    .location-controls {
        position: absolute;
        top: 20px;
        right: 20px;
        display: flex;
        flex-direction: column;
        gap: 10px;
        z-index: 5;
    }
    
    .location-btn {
        width: 50px;
        height: 50px;
        background: white;
        border: 1px solid #ddd;
        border-radius: 8px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }
    
    .location-btn:hover {
        background: #f8f8f8;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
    
    /* City Selector */
    .city-selector {
        position: absolute;
        top: 20px;
        left: 20px;
        z-index: 5;
    }
    
    .city-select {
        padding: 10px 15px;
        background: white;
        border: 1px solid #ddd;
        border-radius: 8px;
        font-size: 14px;
        cursor: pointer;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        min-width: 180px;
    }
    
    /* Map Markers */
    .map-marker {
        position: absolute;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        z-index: 3;
        transform: translate(-50%, -50%);
    }
    
    .pickup-marker {
        background: #f26722;
        top: 45%;
        left: 25%;
        box-shadow: 0 0 0 4px rgba(242, 103, 34, 0.3);
    }
    
    .dropoff-marker {
        background: #ff6b6b;
        top: 35%;
        left: 75%;
        box-shadow: 0 0 0 4px rgba(255, 107, 107, 0.3);
    }
    
    /* Route Line */
    .route-line {
        position: absolute;
        top: 35%;
        left: 25%;
        width: 50%;
        height: 2px;
        background: linear-gradient(90deg, #f26722, #ff6b6b);
        z-index: 2;
        opacity: 0.7;
    }
    
    .route-line::before {
        content: '';
        position: absolute;
        top: -5px;
        right: -5px;
        width: 0;
        height: 0;
        border-left: 8px solid #ff6b6b;
        border-top: 6px solid transparent;
        border-bottom: 6px solid transparent;
    }
    
    /* Responsive */
    @@media (max-width: 768px) {
        .delivery-page {
            flex-direction: column;
            height: auto;
        }
        
        .delivery-sidebar {
            width: 100%;
            height: auto;
        }
        
        .map-container {
            height: 300px;
            order: -1;
        }
        
        .vehicle-options {
            justify-content: space-between;
        }
        
        .vehicle-option {
            min-width: 70px;
            flex: 1;
        }
    }
</style>

<div class="delivery-page">
    <!-- Left Sidebar -->
    <div class="delivery-sidebar">
        <!-- Navigation Tabs -->
        <div class="nav-tabs">
            <a href="#" class="nav-tab active">Đặt giao hàng</a>
            <a href="@Url.Action("Orders", "Delivery")" class="nav-tab">Đơn hàng</a>
            <a href="@Url.Action("Wallet", "Account")" class="nav-tab">Thanh toán & Coupon</a>
            <a href="@Url.Action("Rewards", "Account")" class="nav-tab">Tài xế</a>
            <a href="@Url.Action("Rewards", "Account")" class="nav-tab">Phần thưởng</a>
        </div>
        
        <!-- Delivery Form -->
        <div class="delivery-form">
            @using (Html.BeginForm("BookDelivery", "Delivery", FormMethod.Post, new { id = "deliveryForm" }))
            {
                @Html.AntiForgeryToken()
                
                <!-- Location Section -->
                <div class="location-section">
                    <div class="section-title">Lộ trình (tối đa 20 điểm dừng)</div>
                    
                    <div class="location-input-group">
                        <div class="location-icon pickup-icon"></div>
                        @Html.TextBox("PickupLocation", "Chợ Đồng Xuân, Phố cổ Hà Nội, Đồng Xuân, Hoàn Kiếm, Hà Nội, Việt Nam", new { 
                            @class = "location-input pickup", 
                            @placeholder = "Điểm lấy hàng",
                            @readonly = "readonly"
                        })
                    </div>
                    
                    <div class="location-input-group">
                        <div class="location-icon dropoff-icon"></div>
                        @Html.TextBox("DropoffLocation", "", new { 
                            @class = "location-input dropoff", 
                            @placeholder = "Điểm giao hàng",
                            @id = "dropoffInput"
                        })
                    </div>
                    
                    <button type="button" class="add-stop-btn" onclick="addStop()">
                        <div class="icon">+</div>
                        Thêm điểm dừng
                    </button>
                </div>
                
                <!-- Vehicle Selection -->
                <div class="vehicle-section">
                    <div class="section-title">Phương tiện</div>
                    <div class="vehicle-options">
                        <div class="vehicle-option active" data-vehicle="motorbike">
                            <div class="vehicle-icon"></div>
                            <div class="vehicle-name">Xe Máy</div>
                            <div class="vehicle-capacity"></div>
                        </div>
                        <div class="vehicle-option" data-vehicle="van500">
                            <div class="vehicle-icon"></div>
                            <div class="vehicle-name">Xe Van 500 kg</div>
                            <div class="vehicle-capacity"></div>
                        </div>
                        <div class="vehicle-option" data-vehicle="van750">
                            <div class="vehicle-icon"></div>
                            <div class="vehicle-name">Xe Van 750 kg</div>
                            <div class="vehicle-capacity"></div>
                        </div>
                        <div class="vehicle-option" data-vehicle="van1000">
                            <div class="vehicle-icon"></div>
                            <div class="vehicle-name">Xe Van 1000 kg</div>
                            <div class="vehicle-capacity"></div>
                        </div>
                    </div>
                    @Html.Hidden("SelectedVehicle", "motorbike")
                </div>
                
                <!-- Additional Options -->
                <div class="options-section">
                    <div class="option-item" onclick="toggleOption('helpers')">
                        <div class="option-checkbox" id="helpersCheck"></div>
                        <div class="option-label">Thêm người phụ</div>
                        <div class="option-info">Xem thêm thông tin</div>
                    </div>
                    @Html.Hidden("NeedHelpers", "false", new { @id = "helpersValue" })
                </div>
            }
        </div>
        
        <!-- Book Now Section -->
        <div class="book-section">
            <button type="button" class="book-btn" onclick="bookDelivery()" id="bookBtn">
                Đặt ngay
            </button>
        </div>
    </div>
    
    <!-- Map Container -->
    <div class="map-container">
        <!-- City Selector -->
        <div class="city-selector">
            <select class="city-select" onchange="changeCity(this.value)">
                <option value="hanoi">Hà Nội và Tỉnh Lân Cận</option>
                <option value="hcm">TP. Hồ Chí Minh</option>
                <option value="danang">Đà Nẵng</option>
                <option value="haiphong">Hải Phòng</option>
            </select>
        </div>
        
        <!-- Location Controls -->
        <div class="location-controls">
            <button class="location-btn" onclick="zoomIn()" title="Zoom In">+</button>
            <button class="location-btn" onclick="zoomOut()" title="Zoom Out">−</button>
            <button class="location-btn" onclick="currentLocation()" title="Vị trí hiện tại">📍</button>
        </div>
        
        <!-- Map Placeholder with Markers -->
        <div class="map-placeholder">
            <div class="pickup-marker"></div>
            <div class="dropoff-marker"></div>
            <div class="route-line"></div>
            
            <!-- Map will be integrated here -->
            <div style="color: #999; text-align: center;">
                <div style="font-size: 24px; margin-bottom: 10px;">🗺️</div>
                <div>Bản đồ sẽ được tích hợp tại đây</div>
                <div style="font-size: 12px; margin-top: 5px;">(Google Maps / Mapbox)</div>
            </div>
        </div>
    </div>
</div>

<script>
    // Vehicle Selection
    document.querySelectorAll('.vehicle-option').forEach(option => {
        option.addEventListener('click', function() {
            document.querySelectorAll('.vehicle-option').forEach(opt => opt.classList.remove('active'));
            this.classList.add('active');
            document.getElementById('SelectedVehicle').value = this.dataset.vehicle;
        });
    });
    
    // Toggle Options
    function toggleOption(optionName) {
        const checkbox = document.getElementById(optionName + 'Check');
        const hiddenInput = document.getElementById(optionName + 'Value');
        
        if (checkbox.classList.contains('checked')) {
            checkbox.classList.remove('checked');
            hiddenInput.value = 'false';
        } else {
            checkbox.classList.add('checked');
            hiddenInput.value = 'true';
        }
    }
    
    // Add Stop Function
    function addStop() {
        const locationSection = document.querySelector('.location-section');
        const stopCount = locationSection.querySelectorAll('.location-input-group').length - 1;
        
        if (stopCount >= 20) {
            alert('Tối đa 20 điểm dừng');
            return;
        }
        
        const newStop = document.createElement('div');
        newStop.className = 'location-input-group';
        newStop.innerHTML = `
            <div class="location-icon dropoff-icon"></div>
            <input type="text" class="location-input dropoff" name="StopLocation_${stopCount}" placeholder="Điểm dừng ${stopCount}" />
            <button type="button" onclick="removeStop(this)" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); background: none; border: none; color: #ff6b6b; cursor: pointer;">✕</button>
        `;
        
        const addButton = document.querySelector('.add-stop-btn');
        locationSection.insertBefore(newStop, addButton);
    }
    
    // Remove Stop Function
    function removeStop(button) {
        button.parentElement.remove();
    }
    
    // Map Controls
    function zoomIn() {
        console.log('Zoom in');
        // Integrate with actual map API
    }
    
    function zoomOut() {
        console.log('Zoom out');
        // Integrate with actual map API
    }
    
    function currentLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                console.log('Current location:', position.coords.latitude, position.coords.longitude);
                // Update map and pickup location
            });
        }
    }
    
    function changeCity(city) {
        console.log('Change city to:', city);
        // Update map view and available areas
    }
    
    // Book Delivery
    function bookDelivery() {
        const pickupLocation = document.querySelector('input[name="PickupLocation"]').value;
        const dropoffLocation = document.querySelector('input[name="DropoffLocation"]').value;
        
        if (!dropoffLocation.trim()) {
            alert('Vui lòng nhập điểm giao hàng');
            document.getElementById('dropoffInput').focus();
            return;
        }
        
        const bookBtn = document.getElementById('bookBtn');
        bookBtn.textContent = 'Đang xử lý...';
        bookBtn.disabled = true;
        
        // Submit form or make AJAX call
        document.getElementById('deliveryForm').submit();
    }
    
    // Auto-complete for location inputs (integrate with Google Places API)
    function initAutocomplete() {
        // This would integrate with Google Places API
        console.log('Initialize autocomplete for location inputs');
    }
    
    // Initialize when page loads
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize map
        console.log('Initialize map');
        // initAutocomplete();
        
        // Set default pickup location based on user's location
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                console.log('User location detected');
                // Update pickup location if needed
            });
        }
    });
    
    // Handle form submission
    document.getElementById('deliveryForm').addEventListener('submit', function(e) {
        e.preventDefault();
        bookDelivery();
    });
</script>