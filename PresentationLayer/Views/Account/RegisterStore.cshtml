@model ServiceLayer.Dtos.RegisterStore.RegisterStoreRequest
@{
    ViewData["Title"] = "Đăng ký cửa hàng";
}

@section Styles {
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />

    <style>
        .page-header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .page-title {
            color: var(--primary-color);
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .page-subtitle {
            color: var(--secondary-color);
            font-size: 1.1rem;
        }

        .form-container {
            max-width: 900px;
            margin: 0 auto;
        }

        .map-container {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .map-help {
            background: #f0f9ff;
            border: 1px solid #0ea5e9;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
            font-size: 0.9rem;
            color: #0369a1;
        }

        #map {
            height: 400px;
            border-radius: 12px;
            border: 2px solid var(--border-color);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .coordinate-inputs .form-control {
            background-color: #f8fafc;
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
        }

        .submit-section {
            text-align: center;
            margin-top: 3rem;
            padding: 2rem;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.07);
        }

        .required-mark {
            color: var(--danger-color);
            margin-left: 2px;
        }

        .form-row {
            margin-bottom: 1rem;
        }

        .validation-summary {
            background: #fef2f2;
            border: 1px solid #fecaca;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 2rem;
        }

        .field-validation-error {
            display: block;
            margin-top: 0.25rem;
        }

        .progress-indicator {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 2rem;
        }

        .step {
            display: flex;
            align-items: center;
            margin: 0 1rem;
        }

        .step-number {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background: var(--border-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            margin-right: 0.5rem;
        }

        .step.active .step-number {
            background: var(--primary-color);
        }

        .step.completed .step-number {
            background: var(--success-color);
        }
    </style>
}

<div class="form-container">
    <!-- Page Header -->
    <div class="page-header">
        <h1 class="page-title">
            <i class="fas fa-store-alt me-3"></i>
            Đăng ký cửa hàng
        </h1>
        <p class="page-subtitle">
            Tham gia hệ thống quản lý cửa hàng và mở rộng kinh doanh của bạn
        </p>
    </div>

    <!-- Progress Indicator -->
    <div class="progress-indicator">
        <div class="step active">
            <div class="step-number">1</div>
            <span>Thông tin cửa hàng</span>
        </div>
        <div class="step active">
            <div class="step-number">2</div>
            <span>Địa chỉ</span>
        </div>
    </div>

    <form asp-action="RegisterStore" method="post" novalidate>
        <!-- Validation Summary -->
        <div asp-validation-summary="All" class="validation-summary text-danger"></div>
        @if (TempData["Error"] != null)
        {
            <div class="validation-summary text-danger">@TempData["Error"]</div>
        }
        <!-- Account Information -->      
        <!-- Store Information -->
        <fieldset>
            <legend>
                <i class="fas fa-store me-2"></i>
                Thông tin cửa hàng
            </legend>

            <div class="mb-3">
                <label asp-for="StoreName" class="form-label">
                    Tên cửa hàng <span class="required-mark">*</span>
                </label>
                <input asp-for="StoreName" class="form-control" placeholder="Nhập tên cửa hàng của bạn" required />
                <span asp-validation-for="StoreName" class="text-danger field-validation-error"></span>
            </div>

            <div class="row form-row">
                <div class="col-md-4 mb-3">
                    <label asp-for="LegalName" class="form-label">
                        Tên pháp lý
                    </label>
                    <input asp-for="LegalName" class="form-control" placeholder="Tên công ty/doanh nghiệp" />
                    <span asp-validation-for="LegalName" class="text-danger field-validation-error"></span>
                </div>

                <div class="col-md-4 mb-3">
                    <label asp-for="LicenseNumber" class="form-label">
                        Số giấy phép kinh doanh
                    </label>
                    <input asp-for="LicenseNumber" class="form-control" placeholder="Số GPKD" />
                    <span asp-validation-for="LicenseNumber" class="text-danger field-validation-error"></span>
                </div>

                <div class="col-md-4 mb-3">
                    <label asp-for="TaxNumber" class="form-label">
                        Mã số thuế
                    </label>
                    <input asp-for="TaxNumber" class="form-control" placeholder="MST" />
                    <span asp-validation-for="TaxNumber" class="text-danger field-validation-error"></span>
                </div>
                <div class="col-md-4 mb-3">
                    <label asp-for="ID" class="form-label">
                        Căn cước công dân
                    </label>
                    <input asp-for="ID" class="form-control" placeholder="CCCD" />
                    <span asp-validation-for="ID" class="text-danger field-validation-error"></span>
                </div>
            </div>
        </fieldset>

        <!-- Address & Map -->
        <fieldset>
            <legend>
                <i class="fas fa-map-marker-alt me-2"></i>
                Địa chỉ & Vị trí
            </legend>

            <div class="map-help">
                <i class="fas fa-info-circle me-2"></i>
                <strong>Hướng dẫn:</strong> Tìm kiếm địa chỉ trong ô tìm kiếm hoặc kéo thả điểm đánh dấu trên bản đồ để chọn vị trí chính xác của cửa hàng.
            </div>

            <div class="map-container">
                <div id="map"></div>
            </div>

            <div class="mb-3">
                <label asp-for="AddressLine" class="form-label">
                    Địa chỉ <span class="required-mark">*</span>
                </label>
                <input asp-for="AddressLine" class="form-control" placeholder="Số nhà, tên đường" required />
                <span asp-validation-for="AddressLine" class="text-danger field-validation-error"></span>
            </div>

            <div class="row form-row">
                <div class="col-md-4 mb-3">
                    <label asp-for="Ward" class="form-label">Phường/Xã</label>
                    <input asp-for="Ward" class="form-control" placeholder="Phường/Xã" />
                    <span asp-validation-for="Ward" class="text-danger field-validation-error"></span>
                </div>

                <div class="col-md-4 mb-3">
                    <label asp-for="District" class="form-label">Quận/Huyện</label>
                    <input asp-for="District" class="form-control" placeholder="Quận/Huyện" />
                    <span asp-validation-for="District" class="text-danger field-validation-error"></span>
                </div>

                <div class="col-md-4 mb-3">
                    <label asp-for="City" class="form-label">
                        Tỉnh/Thành phố <span class="required-mark">*</span>
                    </label>
                    <input asp-for="City" class="form-control" placeholder="Tỉnh/Thành phố" required />
                    <span asp-validation-for="City" class="text-danger field-validation-error"></span>
                </div>
            </div>

            <div class="row coordinate-inputs">
                <div class="col-md-6 mb-3">
                    <label asp-for="Latitude" class="form-label">
                        Vĩ độ (Latitude) <span class="required-mark">*</span>
                    </label>
                    <input asp-for="Latitude" class="form-control" readonly required />
                    <span asp-validation-for="Latitude" class="text-danger field-validation-error"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="Longitude" class="form-label">
                        Kinh độ (Longitude) <span class="required-mark">*</span>
                    </label>
                    <input asp-for="Longitude" class="form-control" readonly required />
                    <span asp-validation-for="Longitude" class="text-danger field-validation-error"></span>
                </div>
            </div>
        </fieldset>

        <!-- Submit Section -->
        <div class="submit-section">
            <h5 class="mb-3">Hoàn tất đăng ký</h5>
            <p class="text-muted mb-4">
                Bằng cách nhấn "Đăng ký", bạn đồng ý với các điều khoản sử dụng và chính sách bảo mật của chúng tôi.
            </p>
            <button class="btn btn-primary btn-lg" type="submit">
                <i class="fas fa-check-circle me-2"></i>
                Đăng ký cửa hàng
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <!-- Leaflet Scripts -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

    <script>
        let map, marker;

        document.addEventListener('DOMContentLoaded', initMap);

        function initMap() {
            const defaultLatLng = [21.0278, 105.8342]; // Hà Nội
            map = L.map('map').setView(defaultLatLng, 13);

            // OpenStreetMap tiles
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // Marker kéo thả
            marker = L.marker(defaultLatLng, { draggable: true }).addTo(map);
            updateLatLng(defaultLatLng[0], defaultLatLng[1]);
            reverseGeocode(defaultLatLng[0], defaultLatLng[1]);

            marker.on('dragend', () => {
                const p = marker.getLatLng();
                updateLatLng(p.lat, p.lng);
                reverseGeocode(p.lat, p.lng);
            });

            // Geocoder control
            const geocoder = L.Control.geocoder({
                defaultMarkGeocode: false,
                placeholder: 'Tìm kiếm địa chỉ...',
                geocoder: L.Control.Geocoder.nominatim({
                    geocodingQueryParams: {
                        addressdetails: 1,
                        'accept-language': 'vi',
                        email: 'contact@yourdomain.com'
                    },
                    reverseQueryParams: {
                        addressdetails: 1,
                        'accept-language': 'vi'
                    }
                })
            })
                .on('markgeocode', function (e) {
                    const center = e.geocode.center;
                    map.setView(center, 16);
                    marker.setLatLng(center);
                    updateLatLng(center.lat, center.lng);
                    reverseGeocode(center.lat, center.lng);
                })
                .addTo(map);

            // Restore saved coordinates
            const latInput = document.getElementById("Latitude");
            const lngInput = document.getElementById("Longitude");
            if (latInput.value && lngInput.value) {
                const p = [parseFloat(latInput.value), parseFloat(lngInput.value)];
                map.setView(p, 16);
                marker.setLatLng(p);
                reverseGeocode(p[0], p[1]);
            }
        }

        function updateLatLng(lat, lng) {
            document.getElementById("Latitude").value = lat.toFixed(6);
            document.getElementById("Longitude").value = lng.toFixed(6);
        }

        async function reverseGeocode(lat, lng) {
            try {
                const url = `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lng}&addressdetails=1&accept-language=vi`;
                const res = await fetch(url, {
                    headers: {
                        'Accept': 'application/json',
                        'User-Agent': 'StoreManager/1.0'
                    }
                });
                if (!res.ok) return;
                const data = await res.json();
                fillFromNominatim(data.address, data.display_name);
            } catch (e) {
                console.warn("Reverse geocode error", e);
            }
        }

        function fillFromNominatim(address, displayName) {
            if (!address) return;

            // Address line
            const road = pick(address, ['road', 'residential', 'pedestrian', 'footway', 'path']) || '';
            const house = address?.house_number || '';
            if (road || house) {
                setVal('AddressLine', `${house ? house + ' ' : ''}${road}`.trim());
            } else {
                setVal('AddressLine', displayName || '');
            }
            // Administrative levels
            const city = address?.city || address?.town || address?.village ||
                address?.municipality || address?.province || address?.state || '';
            const district = address.district || address.county || address.suburb || '';
            const ward = address?.ward || address?.suburb || address?.quarter ||
                address?.neighbourhood || address?.hamlet || '';

            setVal('City', city);
            setVal('District', district);
            setVal('Ward', ward);
        }

        function setVal(id, val) {
            const el = document.getElementById(id);
            if (el && val) el.value = val;
        }

        function pick(obj, keys) {
            if (!obj) return null;
            for (const k of keys) {
                if (obj[k]) return obj[k];
            }
            return null;
        }

        // Form validation feedback
        document.querySelector('form').addEventListener('submit', function (e) {
            const requiredFields = this.querySelectorAll('[required]');
            let isValid = true;

            requiredFields.forEach(field => {
                if (!field.value.trim()) {
                    field.classList.add('is-invalid');
                    isValid = false;
                } else {
                    field.classList.remove('is-invalid');
                }
            });

            if (!isValid) {
                e.preventDefault();
                document.querySelector('.validation-summary').scrollIntoView({
                    behavior: 'smooth'
                });
            }
        });
    </script>
}